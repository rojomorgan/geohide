<?php
/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function geohide_help($path, $arg) {
  switch ($path) {
    case "admin/help#geohide":
      return '' . t("Geolocalize a visitor and hide any given field depending on node's title") . '';
      break;
  }
} 



/**
 * Implements hook_node_view().
 *
 * Changes the way the node information is displayed on screen.
 *
 * In this case, it was added a geographic filter to avoid using ip2location or geoplugin webservice to filter the showing of field phonenumber
 */
 
function geohide_node_view($node, $view_mode) {
	$ip = getIP();
	
	
	// Uncomment these lines if you want to use ip2location xml webservice
	// $xml = simplexml_load_file("http://api.ip2location.com/?ip={$ip}&key=demo&package=WS3&format=xml");
	// $cityvisitor = $xml->city_name;
	
	// Uncomment these lines if you want to use geoplugin xml webservice
	$xml = simplexml_load_file("http://www.geoplugin.net/xml.gp?ip=37.35.209.66");
	$countryvisitor = $xml->geoplugin_countryName;
	$cityvisitor = $xml->geoplugin_city;
	
	// Uncomment these lines if you want to use ip2location json webservice
	
	// Retrieving form fields
	$name = variable_get('geohide_form_node',"");
	$field = variable_get('geohide_form_field',"");
	$countryCity = variable_get('geohide_form_country',"");
	

    if ($node->title==$name && $countryvisitor==$countryCity || $cityvisitor==$countryCity){
        if ($view_mode == 'full'){
            $node->content[$field]['#access'] = FALSE;     
           }
         return $node;
    }    
}
/**
* Implement hook_menu().
*/
function geohide_menu(){
	$item = array();
	$item['admin/config/content/geohide'] =  array(
		'title' => t('Configuration of geohide'),
		'description' => t('Configuration the geohide module'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('geohide_form'),
		'access arguments' => array('administer geohide settings'),
		'type' => MENU_NORMAL_ITEM,
		);
	return $item;
}

/**
* Implements hook_permission().
*/
function geohide_permission(){
	return  array(
			'administer geohide settings' => array(
			'title' => t('Administer geohide Configurations'),
			'description' => t('Perform administration tasks for geohide'),
			'restrict access' => true,
			),
		);
	}
	

/**
*
* @return array The form structure.
*/
function geohide_form($form, &$form_state){
	$form['geohide_form'] = array(
		'#title' => t('Geohide Configuration'),
		'#type' => 'fieldset',
		'#description' => t('Configuration the geohide module'),
		);
	$form['geohide_form_node'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter node name'),
		'#default_value' => variable_get('geohide_form_node', "geohide"),
		'#description' => t("Enter the node title you want to hide. Example: HelloWorld"),
		'#required' => TRUE,
		);
	$form['geohide_form_field'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter system name the field'),
		'#default_value' => variable_get('geohide_form_field', "geohide"),
		'#description' => t("Enter the field you want to hide. Example: field_phonenumber"),
		'#required' => TRUE,
		);
	$form['geohide_form_country'] = array(
		'#type' => 'textfield',
		'#title' => t('Enter country name or city name'),
		'#default_value' => variable_get('geohide_form_country', "geohide"),
		'#description' => t("Enter the name of the country or city that you want the field to be hidden from. Example: Spain or Seville"),
		'#required' => TRUE,
		);
	return system_settings_form($form);
}
/*
* Get ip
*/
function getIP() {
     if (isset($_SERVER['HTTP_CLIENT_IP'])) {
        $ip = $_SERVER['HTTP_CLIENT_IP'];
    } elseif (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {
        $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
    } elseif (isset($_SERVER['HTTP_X_FORWARDED'])) {
        $ip = $_SERVER['HTTP_X_FORWARDED'];
    } elseif (isset($_SERVER['HTTP_FORWARDED_FOR'])) {
        $ip = $_SERVER['HTTP_FORWARDED_FOR'];
    } elseif (isset($_SERVER['HTTP_FORWARDED'])) {
        $ip = $_SERVER['HTTP_FORWARDED'];
    } elseif (isset($_SERVER['REMOTE_ADDR'])) {
        $ip = $_SERVER['REMOTE_ADDR'];
    } else {
        $ip = 'UNKNOWN';
    }
    return $ip;
}